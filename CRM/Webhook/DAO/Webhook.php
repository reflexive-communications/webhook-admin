<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from webhook-admin/xml/schema/CRM/Webhook/Webhook.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:388124dcb24df9c4a84af13649b28a3c)
 */
use CRM_Webhook_ExtensionUtil as E;

/**
 * Database access object for the Webhook entity.
 */
class CRM_Webhook_DAO_Webhook extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_webhook';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique Webhook ID
   *
   * @var int
   */
  public $id;

  /**
   * The human readable name of the handler
   *
   * @var string
   */
  public $name;

  /**
   * Useful information about this hook
   *
   * @var text
   */
  public $description;

  /**
   * The class name of the handler application
   *
   * @var string
   */
  public $handler;

  /**
   * The query parameter of the webhook
   *
   * @var string
   */
  public $query_string;

  /**
   * The class name of the processor application
   *
   * @var string
   */
  public $processor;

  /**
   * Serialized data for PHP usage
   *
   * @var text
   */
  public $options;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_webhook';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Webhooks') : E::ts('Webhook');
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => E::ts('Unique Webhook ID'),
          'required' => TRUE,
          'where' => 'civicrm_webhook.id',
          'table_name' => 'civicrm_webhook',
          'entity' => 'Webhook',
          'bao' => 'CRM_Webhook_DAO_Webhook',
          'localizable' => 0,
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'name' => [
          'name' => 'name',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Name'),
          'description' => E::ts('The human readable name of the handler'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_webhook.name',
          'table_name' => 'civicrm_webhook',
          'entity' => 'Webhook',
          'bao' => 'CRM_Webhook_DAO_Webhook',
          'localizable' => 0,
          'add' => NULL,
        ],
        'description' => [
          'name' => 'description',
          'type' => CRM_Utils_Type::T_TEXT,
          'title' => E::ts('Description'),
          'description' => E::ts('Useful information about this hook'),
          'where' => 'civicrm_webhook.description',
          'table_name' => 'civicrm_webhook',
          'entity' => 'Webhook',
          'bao' => 'CRM_Webhook_DAO_Webhook',
          'localizable' => 0,
          'add' => NULL,
        ],
        'handler' => [
          'name' => 'handler',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Handler'),
          'description' => E::ts('The class name of the handler application'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_webhook.handler',
          'table_name' => 'civicrm_webhook',
          'entity' => 'Webhook',
          'bao' => 'CRM_Webhook_DAO_Webhook',
          'localizable' => 0,
          'add' => NULL,
        ],
        'query_string' => [
          'name' => 'query_string',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Query String'),
          'description' => E::ts('The query parameter of the webhook'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_webhook.query_string',
          'table_name' => 'civicrm_webhook',
          'entity' => 'Webhook',
          'bao' => 'CRM_Webhook_DAO_Webhook',
          'localizable' => 0,
          'add' => NULL,
        ],
        'processor' => [
          'name' => 'processor',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Processor'),
          'description' => E::ts('The class name of the processor application'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_webhook.processor',
          'table_name' => 'civicrm_webhook',
          'entity' => 'Webhook',
          'bao' => 'CRM_Webhook_DAO_Webhook',
          'localizable' => 0,
          'add' => NULL,
        ],
        'options' => [
          'name' => 'options',
          'type' => CRM_Utils_Type::T_TEXT,
          'title' => E::ts('Options'),
          'description' => E::ts('Serialized data for PHP usage'),
          'where' => 'civicrm_webhook.options',
          'table_name' => 'civicrm_webhook',
          'entity' => 'Webhook',
          'bao' => 'CRM_Webhook_DAO_Webhook',
          'localizable' => 0,
          'serialize' => self::SERIALIZE_PHP,
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'webhook', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'webhook', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [
      'index_query' => [
        'name' => 'index_query',
        'field' => [
          0 => 'query_string',
        ],
        'localizable' => FALSE,
        'unique' => TRUE,
        'sig' => 'civicrm_webhook::1::query_string',
      ],
    ];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
